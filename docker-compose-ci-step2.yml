version: "3.8"

services:
  # ---------------------------------
  # Redis: used for async celery tasks
  # ---------------------------------
  redis:
    image: redis
    command: redis-server --requirepass password
    expose:
      - 6379
  # ---------------------------------
  # Postgres Database
  # ---------------------------------
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
  # ---------------------------------
  # Server side (Django)
  #  - Built from "server/Dockerfile"
  # ---------------------------------
  server:
    container_name: webapp-frontend
    build: "./server"
    # For production we will need to set
    # these variables to point to a standalone instance
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=opendp_project.settings.cypress_settings
      #- DJANGO_SETTINGS_MODULE=opendp_project.settings.development
    command: sh -c "./migrate.sh && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
      - ./server/static:/server/static
    ports:
      - "8000:8000"
    depends_on:
      - db
  # ---------------------------------
  # Celery Task Queue
  # - Used for profiling, other longer
  #   running tasks
  # ---------------------------------
  celery-queue:
    build: "./server"
    environment:
      - DJANGO_SETTINGS_MODULE=opendp_project.settings.development
    env_file:
      - .env
    command: celery -A opendp_project worker -l info -n worker_dpcreator
    #  command: celery -A opendp_project worker -l INFO
    volumes:
      - .:/code
    ports:
      - "8070:8070"
    depends_on:
      - db
      - redis
      - server
  cypress:
    image: "cypress/included:7.2.0"
    command: "--config-file cypress_github_ci.json"
    depends_on:
      - celery-queue
    # Note: the environment vars have been moved to a custom config file: cypress_github_ci.json
    #environment:
    #  - CYPRESS_BASE_URL=http://server:8000
    working_dir: /e2e
    volumes:
      - ./client:/e2e
